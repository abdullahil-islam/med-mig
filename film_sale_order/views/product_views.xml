<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <record id="product_template_form_med_prod_type_add" model="ir.ui.view">
            <field name="name">product.template.product.form.med_prod_type</field>
            <field name="model">product.template</field>
            <field name="inherit_id" ref="product.product_template_form_view"/>
            <field name="arch" type="xml">
                <field name="product_variant_id" position="after">
                    <field name="med_prod_type" readonly="1"/>
                </field>
            </field>
        </record>

        <record id="sale.product_template_action" model="ir.actions.act_window">
            <field name="context">{"search_default_filter_to_sell":1, "sale_multi_pricelist_product_template": 1,
                'default_type': 'product', 'default_med_prod_type': 'regular'}
            </field>
            <field name="domain">[('is_equipment', '=', False), ('med_prod_type', '=', 'regular')]</field>
        </record>

        <record id="product_template_action_film" model="ir.actions.act_window">
            <field name="name">Products</field>
            <field name="type">ir.actions.act_window</field>
            <field name="res_model">product.template</field>
            <field name="view_mode">kanban,tree,form,activity</field>
            <field name="view_id" ref="product.product_template_kanban_view"/>
            <field name="search_view_id" ref="product.product_template_search_view"/>
            <field name="context">{"search_default_filter_to_sell":1, "sale_multi_pricelist_product_template": 1,
                'default_type': 'product', 'default_med_prod_type': 'film'}
            </field>
            <field name="domain">[('is_equipment', '=', False), ('med_prod_type', '=', 'film')]</field>
            <field name="help" type="html">
                <p class="o_view_nocontent_smiling_face">
                    Create a new product
                </p>
                <p>
                    You must define a product for everything you purchase,
                    whether it's a physical product, a consumable or services.
                </p>
            </field>
        </record>

        <menuitem id="menu_product_template_action_film" name="Product"
                  parent="film_sale_order.main_menu_sale_order_film" sequence="02"/>

        <menuitem id="menu_product_template_action_sub_film" name="Film"
                  parent="menu_product_template_action_film" action="product_template_action_film"
                  sequence="01"/>

        <record id="stock.product_template_action_product" model="ir.actions.act_window">
            <field name="context">{"search_default_consumable": 1, 'default_med_prod_type': 'regular'}</field>
            <field name="domain">[('med_prod_type', '=', 'regular')]</field>
        </record>

        <record id="product_template_action_product_med" model="ir.actions.act_window">
            <field name="name">Film Products</field>
            <field name="type">ir.actions.act_window</field>
            <field name="res_model">product.template</field>
            <field name="view_mode">kanban,tree,form</field>
            <field name="search_view_id" ref="stock.product_template_search_form_view_stock"/>
            <field name="context">{"search_default_consumable": 1, 'default_detailed_type': 'product',
                'default_med_prod_type': 'film'}
            </field>
            <field name="domain">[('med_prod_type', '=', 'film')]</field>
            <field name="help" type="html">
                <p class="o_view_nocontent_smiling_face">
                    No product found. Let's create one!
                </p>
                <p>
                    Track your stock quantities by creating storable products.
                </p>
            </field>
        </record>
        <menuitem id="menu_product_variant_config_stock_film" name="Film" action="product_template_action_product_med"
                  parent="stock.menu_stock_inventory_control" sequence="10"/>

        <record id="action_make_products_regular" model="ir.actions.server">
            <field name="name">Make Regular Products</field>
            <field name="state">code</field>
            <field name="type">ir.actions.server</field>
            <field name="model_id" ref="model_product_template"/>
            <field name="binding_model_id" ref="model_product_template"/>
            <field name="binding_view_types">list</field>
            <field name="code">
                if records:
                    records.action_make_products_regular()
            </field>
        </record>

    </data>
</odoo>
